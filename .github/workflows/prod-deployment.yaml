name: Build and Deploy to GKE

on:
  push:
    branches:
      - ci-cd

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1    # Add your cluster name here.
  GKE_ZONE: us-central1   # Add your cluster zone here.
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.

jobs:
  setup-build-publish-deploy:
    name: Setup Google Cloud
    runs-on: ubuntu-latest
    environment: production

    permissions:
      id-token: write
      contents: read

    steps:
    # Setup gcloud CLI
    - uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # The KUBECONFIG env var is automatically exported and picked up by kubectl.
    - id: 'get-pods'
      run: 'kubectl get pods'

    - id: 'docker-compose-build'
      run: 'docker-compose build'

    - id: 'tag-dockers'
      run: |-
        docker tag order gcr.io/$PROJECT_ID/order:$GITHUB_SHA
        docker tag stock gcr.io/$PROJECT_ID/stock:$GITHUB_SHA
        docker tag user gcr.io/$PROJECT_ID/user:$GITHUB_SHA

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/order:$GITHUB_SHA"
        docker push "gcr.io/$PROJECT_ID/stock:$GITHUB_SHA"
        docker push "gcr.io/$PROJECT_ID/user:$GITHUB_SHA"  

    - name: Deploy
      run: |-
        cd k8s-gcloud
        kubectl apply -f .